package bgzipfuzz

// Edit if desired. Code generated by "fzgen -o ../../test/fuzz/gzipfuzz_test.go .".

import (
	"net/http"
	"testing"

	"github.com/retail-ai-inc/beanq/v3/helper/bgzip"
	"github.com/thepudds/fzgen/fuzzer"
)

func Fuzz_GzipResponseWriter_Close(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		var gzw *bgzip.GzipResponseWriter
		fz := fuzzer.NewFuzzer(data)
		fz.Fill(&gzw)
		if gzw == nil {
			return
		}

		gzw.Close()
	})
}

func Fuzz_GzipResponseWriter_Write(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		var gzw *bgzip.GzipResponseWriter
		var d2 []byte
		fz := fuzzer.NewFuzzer(data)
		fz.Fill(&gzw, &d2)
		if gzw == nil {
			return
		}

		gzw.Write(d2)
	})
}

func Fuzz_MatchGzipEncoding(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		var r *http.Request
		fz := fuzzer.NewFuzzer(data)
		fz.Fill(&r)
		if r == nil {
			return
		}

		bgzip.MatchGzipEncoding(r)
	})
}

// skipping Fuzz_NewGzipResponseWriter because parameters include func, chan, or unsupported interface: net/http.ResponseWriter
